name: CI with Coverage and SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and generate coverage report
        run: |
          coverage run -m unittest discover
          coverage xml -o cobertura.xml
          coverage report -m > coverage_report.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=dqmdz-um_sample-circleci
            -Dsonar.organization=dqmdz-um
            -Dsonar.python.coverage.reportPaths=cobertura.xml
            -Dsonar.sources=.

      - name: Update README with coverage report
        run: |
          cat << 'EOF' > update_readme.py
          import re

          with open("coverage_report.txt", "r") as f:
              report = f.read()

          with open("README.md", "r") as f:
              readme = f.read()

          if not report.endswith('\n'):
              report += '\n'

          new_content = f"## Coverage Report\n\n```text\n{report}```"

          new_readme = re.sub(
              r"(<!-- COVERAGE_START -->)(.*)(<!-- COVERAGE_END -->)",
              f"\1\n{new_content}\n\3",
              readme,
              flags=re.DOTALL,
          )

          with open("README.md", "w") as f:
              f.write(new_readme)
          EOF
          python update_readme.py

      - name: Commit and push README changes
        if: github.ref == 'refs/heads/main' # Only run on main branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit to README.md"
          else
            git commit -m "docs: Update coverage report in README [skip ci]"
            git push
          fi
