name: CI with Coverage and SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests and generate coverage report
        run: |
          coverage run -m unittest discover
          coverage xml -o cobertura.xml
          coverage report -m > coverage_report.txt

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=dqmdz-um_sample-circleci
            -Dsonar.organization=dqmdz-um
            -Dsonar.python.coverage.reportPaths=cobertura.xml
            -Dsonar.sources=.

      - name: Update README with coverage report
        run: |
          START_COMMENT="<!-- COVERAGE_START -->"
          END_COMMENT="<!-- COVERAGE_END -->"
          REPORT_FILE="coverage_report.txt"
          README_FILE="README.md"

          # Create the content to be inserted, including a title and code block
          COVERAGE_CONTENT="## Coverage Report\n\n```\n$(cat $REPORT_FILE)\n```"

          # Use a temporary file for sed to handle multiline replacement
          tmp=$(mktemp)
          awk -v start="$START_COMMENT" -v end="$END_COMMENT" -v content="$COVERAGE_CONTENT" ' 
            $0 == start { print; print content; inside=1 }
            $0 == end { inside=0 }
            !inside { print } 
          ' "$README_FILE" > "$tmp" && mv "$tmp" "$README_FILE"

      - name: Commit and push README changes
        if: github.ref == 'refs/heads/main' # Only run on main branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit to README.md"
          else
            git commit -m "docs: Update coverage report in README [skip ci]"
            git push
          fi
